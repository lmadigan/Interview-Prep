```js
var list = [1,2,3,4];

list.forEach(li => {
    setTimeout(function() {
    console.log('The index of this number is: ' + li);
  }, 3000);
});

function mergeArrays(arr1, arr2) {
    var ind1 = 0;
    var ind2 = 0;

    while (ind1 <= arr1.length && ind2 <= arr2.length ) {
        if ( ind1 && )
    }
}


async function callAsync(number) {
  for (let i = 0; i <= number; i++) {
      var x = await promisify(i);     
      console.log(x);
  }
}

 function promisify(i) {
    return new Promise((resolve, reject) => {
        asyncFunction(i, (x) => {
            resolve(x); 
        });

    });
}

function asyncFunction(i, callback) {
    setTimeout(function() {
    callback("task = " + i); 
    }, Math.floor(Math.random() * 6)
    );
}

callAsync(4);

//should return 
// "task = 0"
// "task = 1" 
// "task = 2"
// "task = 3"
// task = 4" 

function twoArrays(k, A, B) {

    if ( A.length === 1 && B.length === 1 ) {
        if ( (A[0] + B[0]) >= k ) {
            console.log("yes");
            return "YES"; 
        } else {
            return "NO";
        }    
    }
    
    for ( let i = 0; i < A.length; i++ ) {
        var current = A[i];
        for (let j = 0; j < B.length; j++) {
            if ( current + B[j] >= k ) {
                let firstHalfB = B.slice(0, j);
                let secondHalfB = B.slice(j+1, B.length);
                let newB = firstHalfB.concat(secondHalfB)
                return twoArrays(k, A.slice(i+1, A.length), newB);kkkkcchkrjltlgckiluvubvlllcerulbrfbgblciltteeiejcchkrjltdcjecggvnvvtfneetvjbkikvgnigvjcreiejcchkrjlthguhjljkncvnfuelglggbiuiekktingckkkkcchkrjltgndnjnfcujvgfitfbvebggvrvijbredfkkkkcchkrjltkjtltfcbfetrurhvdcfhkrffgujvncfb
            }
            if ( j === (B.length - 1) ) {
                return "NO"; 
            }
        }
    }

}

console.log(twoArrays(10, [1,2,3], [9,8,7]));

function foo1() {
    {
        return{
            bar: "hello"
        };
    }
}

function foo2() {
    {
        return{
            bar: "hello"
        };
    }
}

console.log(foo1());
console.log(foo2());

```